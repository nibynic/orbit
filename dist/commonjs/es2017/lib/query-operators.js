'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QueryOperators = undefined;

var _utils = require('@orbit/utils');

var _data = require('@orbit/data');

var _getOperators = require('./get-operators');

function deserialize(source, document) {
    const deserialized = source.serializer.deserializeDocument(document);
    const records = [];
    Array.prototype.push.apply(records, (0, _utils.toArray)(deserialized.data));
    if (deserialized.included) {
        Array.prototype.push.apply(records, deserialized.included);
    }
    const operations = records.map(record => {
        return {
            op: 'replaceRecord',
            record
        };
    });
    let transforms = [(0, _data.buildTransform)(operations)];
    let primaryData = deserialized.data;
    return { transforms, primaryData };
}
const QueryOperators = exports.QueryOperators = {
    findRecord(source, query) {
        return _getOperators.GetOperators.findRecord(source, query).then(data => deserialize(source, data));
    },
    findRecords(source, query) {
        return _getOperators.GetOperators.findRecords(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecord(source, query) {
        return _getOperators.GetOperators.findRelatedRecord(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecords(source, query) {
        return _getOperators.GetOperators.findRelatedRecords(source, query).then(data => deserialize(source, data));
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1vcGVyYXRvcnMuanMiXSwibmFtZXMiOlsiZGVzZXJpYWxpemUiLCJzb3VyY2UiLCJkb2N1bWVudCIsImRlc2VyaWFsaXplZCIsInNlcmlhbGl6ZXIiLCJkZXNlcmlhbGl6ZURvY3VtZW50IiwicmVjb3JkcyIsIkFycmF5IiwicHJvdG90eXBlIiwicHVzaCIsImFwcGx5IiwiZGF0YSIsImluY2x1ZGVkIiwib3BlcmF0aW9ucyIsIm1hcCIsInJlY29yZCIsIm9wIiwidHJhbnNmb3JtcyIsInByaW1hcnlEYXRhIiwiUXVlcnlPcGVyYXRvcnMiLCJmaW5kUmVjb3JkIiwicXVlcnkiLCJHZXRPcGVyYXRvcnMiLCJ0aGVuIiwiZmluZFJlY29yZHMiLCJmaW5kUmVsYXRlZFJlY29yZCIsImZpbmRSZWxhdGVkUmVjb3JkcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBLFNBQVNBLFdBQVQsQ0FBcUJDLE1BQXJCLEVBQTZCQyxRQUE3QixFQUF1QztBQUNuQyxVQUFNQyxlQUFlRixPQUFPRyxVQUFQLENBQWtCQyxtQkFBbEIsQ0FBc0NILFFBQXRDLENBQXJCO0FBQ0EsVUFBTUksVUFBVSxFQUFoQjtBQUNBQyxVQUFNQyxTQUFOLENBQWdCQyxJQUFoQixDQUFxQkMsS0FBckIsQ0FBMkJKLE9BQTNCLEVBQW9DLG9CQUFRSCxhQUFhUSxJQUFyQixDQUFwQztBQUNBLFFBQUlSLGFBQWFTLFFBQWpCLEVBQTJCO0FBQ3ZCTCxjQUFNQyxTQUFOLENBQWdCQyxJQUFoQixDQUFxQkMsS0FBckIsQ0FBMkJKLE9BQTNCLEVBQW9DSCxhQUFhUyxRQUFqRDtBQUNIO0FBQ0QsVUFBTUMsYUFBYVAsUUFBUVEsR0FBUixDQUFZQyxVQUFVO0FBQ3JDLGVBQU87QUFDSEMsZ0JBQUksZUFERDtBQUVIRDtBQUZHLFNBQVA7QUFJSCxLQUxrQixDQUFuQjtBQU1BLFFBQUlFLGFBQWEsQ0FBQywwQkFBZUosVUFBZixDQUFELENBQWpCO0FBQ0EsUUFBSUssY0FBY2YsYUFBYVEsSUFBL0I7QUFDQSxXQUFPLEVBQUVNLFVBQUYsRUFBY0MsV0FBZCxFQUFQO0FBQ0g7QUFDTSxNQUFNQywwQ0FBaUI7QUFDMUJDLGVBQVduQixNQUFYLEVBQW1Cb0IsS0FBbkIsRUFBMEI7QUFDdEIsZUFBT0MsMkJBQWFGLFVBQWIsQ0FBd0JuQixNQUF4QixFQUFnQ29CLEtBQWhDLEVBQXVDRSxJQUF2QyxDQUE0Q1osUUFBUVgsWUFBWUMsTUFBWixFQUFvQlUsSUFBcEIsQ0FBcEQsQ0FBUDtBQUNILEtBSHlCO0FBSTFCYSxnQkFBWXZCLE1BQVosRUFBb0JvQixLQUFwQixFQUEyQjtBQUN2QixlQUFPQywyQkFBYUUsV0FBYixDQUF5QnZCLE1BQXpCLEVBQWlDb0IsS0FBakMsRUFBd0NFLElBQXhDLENBQTZDWixRQUFRWCxZQUFZQyxNQUFaLEVBQW9CVSxJQUFwQixDQUFyRCxDQUFQO0FBQ0gsS0FOeUI7QUFPMUJjLHNCQUFrQnhCLE1BQWxCLEVBQTBCb0IsS0FBMUIsRUFBaUM7QUFDN0IsZUFBT0MsMkJBQWFHLGlCQUFiLENBQStCeEIsTUFBL0IsRUFBdUNvQixLQUF2QyxFQUE4Q0UsSUFBOUMsQ0FBbURaLFFBQVFYLFlBQVlDLE1BQVosRUFBb0JVLElBQXBCLENBQTNELENBQVA7QUFDSCxLQVR5QjtBQVUxQmUsdUJBQW1CekIsTUFBbkIsRUFBMkJvQixLQUEzQixFQUFrQztBQUM5QixlQUFPQywyQkFBYUksa0JBQWIsQ0FBZ0N6QixNQUFoQyxFQUF3Q29CLEtBQXhDLEVBQStDRSxJQUEvQyxDQUFvRFosUUFBUVgsWUFBWUMsTUFBWixFQUFvQlUsSUFBcEIsQ0FBNUQsQ0FBUDtBQUNIO0FBWnlCLENBQXZCIiwiZmlsZSI6ImxpYi9xdWVyeS1vcGVyYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0FycmF5IH0gZnJvbSAnQG9yYml0L3V0aWxzJztcbmltcG9ydCB7IGJ1aWxkVHJhbnNmb3JtIH0gZnJvbSAnQG9yYml0L2RhdGEnO1xuaW1wb3J0IHsgR2V0T3BlcmF0b3JzIH0gZnJvbSBcIi4vZ2V0LW9wZXJhdG9yc1wiO1xuZnVuY3Rpb24gZGVzZXJpYWxpemUoc291cmNlLCBkb2N1bWVudCkge1xuICAgIGNvbnN0IGRlc2VyaWFsaXplZCA9IHNvdXJjZS5zZXJpYWxpemVyLmRlc2VyaWFsaXplRG9jdW1lbnQoZG9jdW1lbnQpO1xuICAgIGNvbnN0IHJlY29yZHMgPSBbXTtcbiAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShyZWNvcmRzLCB0b0FycmF5KGRlc2VyaWFsaXplZC5kYXRhKSk7XG4gICAgaWYgKGRlc2VyaWFsaXplZC5pbmNsdWRlZCkge1xuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShyZWNvcmRzLCBkZXNlcmlhbGl6ZWQuaW5jbHVkZWQpO1xuICAgIH1cbiAgICBjb25zdCBvcGVyYXRpb25zID0gcmVjb3Jkcy5tYXAocmVjb3JkID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9wOiAncmVwbGFjZVJlY29yZCcsXG4gICAgICAgICAgICByZWNvcmRcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICBsZXQgdHJhbnNmb3JtcyA9IFtidWlsZFRyYW5zZm9ybShvcGVyYXRpb25zKV07XG4gICAgbGV0IHByaW1hcnlEYXRhID0gZGVzZXJpYWxpemVkLmRhdGE7XG4gICAgcmV0dXJuIHsgdHJhbnNmb3JtcywgcHJpbWFyeURhdGEgfTtcbn1cbmV4cG9ydCBjb25zdCBRdWVyeU9wZXJhdG9ycyA9IHtcbiAgICBmaW5kUmVjb3JkKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVjb3JkKHNvdXJjZSwgcXVlcnkpLnRoZW4oZGF0YSA9PiBkZXNlcmlhbGl6ZShzb3VyY2UsIGRhdGEpKTtcbiAgICB9LFxuICAgIGZpbmRSZWNvcmRzKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVjb3Jkcyhzb3VyY2UsIHF1ZXJ5KS50aGVuKGRhdGEgPT4gZGVzZXJpYWxpemUoc291cmNlLCBkYXRhKSk7XG4gICAgfSxcbiAgICBmaW5kUmVsYXRlZFJlY29yZChzb3VyY2UsIHF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBHZXRPcGVyYXRvcnMuZmluZFJlbGF0ZWRSZWNvcmQoc291cmNlLCBxdWVyeSkudGhlbihkYXRhID0+IGRlc2VyaWFsaXplKHNvdXJjZSwgZGF0YSkpO1xuICAgIH0sXG4gICAgZmluZFJlbGF0ZWRSZWNvcmRzKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVsYXRlZFJlY29yZHMoc291cmNlLCBxdWVyeSkudGhlbihkYXRhID0+IGRlc2VyaWFsaXplKHNvdXJjZSwgZGF0YSkpO1xuICAgIH1cbn07Il19