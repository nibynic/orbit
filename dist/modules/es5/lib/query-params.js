function flattenObjectToParams(obj) {
    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

    var params = [];
    Object.keys(obj).forEach(function (key) {
        if (!obj.hasOwnProperty(key)) {
            return;
        }
        var newPath = path.slice();
        newPath.push(key);
        if (obj[key] !== null && typeof obj[key] === 'object') {
            Array.prototype.push.apply(params, flattenObjectToParams(obj[key], newPath));
        } else {
            params.push({
                path: newPath,
                val: obj[key]
            });
        }
    });
    return params;
}
export function encodeQueryParams(obj) {
    return flattenObjectToParams(obj).map(function (param) {
        if (param.path.length === 1) {
            param.path = param.path[0];
        } else {
            var firstSegment = param.path[0];
            var remainingSegments = param.path.slice(1);
            param.path = firstSegment + '[' + remainingSegments.join('][') + ']';
        }
        return param;
    }).map(function (param) {
        return encodeURIComponent(param.path) + '=' + encodeURIComponent(param.val);
    }).join('&');
}
export function appendQueryParams(url, obj) {
    var fullUrl = url;
    var queryParams = encodeQueryParams(obj);
    if (queryParams.length > 0) {
        if (fullUrl.indexOf('?') === -1) {
            fullUrl += '?';
        } else {
            fullUrl += '&';
        }
        fullUrl += queryParams;
    }
    return fullUrl;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1wYXJhbXMuanMiXSwibmFtZXMiOlsiZmxhdHRlbk9iamVjdFRvUGFyYW1zIiwib2JqIiwicGF0aCIsInBhcmFtcyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiaGFzT3duUHJvcGVydHkiLCJrZXkiLCJuZXdQYXRoIiwic2xpY2UiLCJwdXNoIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJhcHBseSIsInZhbCIsImVuY29kZVF1ZXJ5UGFyYW1zIiwibWFwIiwicGFyYW0iLCJsZW5ndGgiLCJmaXJzdFNlZ21lbnQiLCJyZW1haW5pbmdTZWdtZW50cyIsImpvaW4iLCJlbmNvZGVVUklDb21wb25lbnQiLCJhcHBlbmRRdWVyeVBhcmFtcyIsInVybCIsImZ1bGxVcmwiLCJxdWVyeVBhcmFtcyIsImluZGV4T2YiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLHFCQUFULENBQStCQyxHQUEvQixFQUErQztBQUFBLFFBQVhDLElBQVcsdUVBQUosRUFBSTs7QUFDM0MsUUFBSUMsU0FBUyxFQUFiO0FBQ0FDLFdBQU9DLElBQVAsQ0FBWUosR0FBWixFQUFpQkssT0FBakIsQ0FBeUIsZUFBTztBQUM1QixZQUFJLENBQUNMLElBQUlNLGNBQUosQ0FBbUJDLEdBQW5CLENBQUwsRUFBOEI7QUFDMUI7QUFDSDtBQUNELFlBQUlDLFVBQVVQLEtBQUtRLEtBQUwsRUFBZDtBQUNBRCxnQkFBUUUsSUFBUixDQUFhSCxHQUFiO0FBQ0EsWUFBSVAsSUFBSU8sR0FBSixNQUFhLElBQWIsSUFBcUIsT0FBT1AsSUFBSU8sR0FBSixDQUFQLEtBQW9CLFFBQTdDLEVBQXVEO0FBQ25ESSxrQkFBTUMsU0FBTixDQUFnQkYsSUFBaEIsQ0FBcUJHLEtBQXJCLENBQTJCWCxNQUEzQixFQUFtQ0gsc0JBQXNCQyxJQUFJTyxHQUFKLENBQXRCLEVBQWdDQyxPQUFoQyxDQUFuQztBQUNILFNBRkQsTUFFTztBQUNITixtQkFBT1EsSUFBUCxDQUFZO0FBQ1JULHNCQUFNTyxPQURFO0FBRVJNLHFCQUFLZCxJQUFJTyxHQUFKO0FBRkcsYUFBWjtBQUlIO0FBQ0osS0FkRDtBQWVBLFdBQU9MLE1BQVA7QUFDSDtBQUNELE9BQU8sU0FBU2EsaUJBQVQsQ0FBMkJmLEdBQTNCLEVBQWdDO0FBQ25DLFdBQU9ELHNCQUFzQkMsR0FBdEIsRUFBMkJnQixHQUEzQixDQUErQixpQkFBUztBQUMzQyxZQUFJQyxNQUFNaEIsSUFBTixDQUFXaUIsTUFBWCxLQUFzQixDQUExQixFQUE2QjtBQUN6QkQsa0JBQU1oQixJQUFOLEdBQWFnQixNQUFNaEIsSUFBTixDQUFXLENBQVgsQ0FBYjtBQUNILFNBRkQsTUFFTztBQUNILGdCQUFJa0IsZUFBZUYsTUFBTWhCLElBQU4sQ0FBVyxDQUFYLENBQW5CO0FBQ0EsZ0JBQUltQixvQkFBb0JILE1BQU1oQixJQUFOLENBQVdRLEtBQVgsQ0FBaUIsQ0FBakIsQ0FBeEI7QUFDQVEsa0JBQU1oQixJQUFOLEdBQWFrQixlQUFlLEdBQWYsR0FBcUJDLGtCQUFrQkMsSUFBbEIsQ0FBdUIsSUFBdkIsQ0FBckIsR0FBb0QsR0FBakU7QUFDSDtBQUNELGVBQU9KLEtBQVA7QUFDSCxLQVRNLEVBU0pELEdBVEksQ0FTQTtBQUFBLGVBQVNNLG1CQUFtQkwsTUFBTWhCLElBQXpCLElBQWlDLEdBQWpDLEdBQXVDcUIsbUJBQW1CTCxNQUFNSCxHQUF6QixDQUFoRDtBQUFBLEtBVEEsRUFTK0VPLElBVC9FLENBU29GLEdBVHBGLENBQVA7QUFVSDtBQUNELE9BQU8sU0FBU0UsaUJBQVQsQ0FBMkJDLEdBQTNCLEVBQWdDeEIsR0FBaEMsRUFBcUM7QUFDeEMsUUFBSXlCLFVBQVVELEdBQWQ7QUFDQSxRQUFJRSxjQUFjWCxrQkFBa0JmLEdBQWxCLENBQWxCO0FBQ0EsUUFBSTBCLFlBQVlSLE1BQVosR0FBcUIsQ0FBekIsRUFBNEI7QUFDeEIsWUFBSU8sUUFBUUUsT0FBUixDQUFnQixHQUFoQixNQUF5QixDQUFDLENBQTlCLEVBQWlDO0FBQzdCRix1QkFBVyxHQUFYO0FBQ0gsU0FGRCxNQUVPO0FBQ0hBLHVCQUFXLEdBQVg7QUFDSDtBQUNEQSxtQkFBV0MsV0FBWDtBQUNIO0FBQ0QsV0FBT0QsT0FBUDtBQUNIIiwiZmlsZSI6ImxpYi9xdWVyeS1wYXJhbXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBmbGF0dGVuT2JqZWN0VG9QYXJhbXMob2JqLCBwYXRoID0gW10pIHtcbiAgICBsZXQgcGFyYW1zID0gW107XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbmV3UGF0aCA9IHBhdGguc2xpY2UoKTtcbiAgICAgICAgbmV3UGF0aC5wdXNoKGtleSk7XG4gICAgICAgIGlmIChvYmpba2V5XSAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShwYXJhbXMsIGZsYXR0ZW5PYmplY3RUb1BhcmFtcyhvYmpba2V5XSwgbmV3UGF0aCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyYW1zLnB1c2goe1xuICAgICAgICAgICAgICAgIHBhdGg6IG5ld1BhdGgsXG4gICAgICAgICAgICAgICAgdmFsOiBvYmpba2V5XVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVF1ZXJ5UGFyYW1zKG9iaikge1xuICAgIHJldHVybiBmbGF0dGVuT2JqZWN0VG9QYXJhbXMob2JqKS5tYXAocGFyYW0gPT4ge1xuICAgICAgICBpZiAocGFyYW0ucGF0aC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHBhcmFtLnBhdGggPSBwYXJhbS5wYXRoWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGZpcnN0U2VnbWVudCA9IHBhcmFtLnBhdGhbMF07XG4gICAgICAgICAgICBsZXQgcmVtYWluaW5nU2VnbWVudHMgPSBwYXJhbS5wYXRoLnNsaWNlKDEpO1xuICAgICAgICAgICAgcGFyYW0ucGF0aCA9IGZpcnN0U2VnbWVudCArICdbJyArIHJlbWFpbmluZ1NlZ21lbnRzLmpvaW4oJ11bJykgKyAnXSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcmFtO1xuICAgIH0pLm1hcChwYXJhbSA9PiBlbmNvZGVVUklDb21wb25lbnQocGFyYW0ucGF0aCkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQocGFyYW0udmFsKSkuam9pbignJicpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZFF1ZXJ5UGFyYW1zKHVybCwgb2JqKSB7XG4gICAgbGV0IGZ1bGxVcmwgPSB1cmw7XG4gICAgbGV0IHF1ZXJ5UGFyYW1zID0gZW5jb2RlUXVlcnlQYXJhbXMob2JqKTtcbiAgICBpZiAocXVlcnlQYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAoZnVsbFVybC5pbmRleE9mKCc/JykgPT09IC0xKSB7XG4gICAgICAgICAgICBmdWxsVXJsICs9ICc/JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZ1bGxVcmwgKz0gJyYnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bGxVcmwgKz0gcXVlcnlQYXJhbXM7XG4gICAgfVxuICAgIHJldHVybiBmdWxsVXJsO1xufSJdfQ==