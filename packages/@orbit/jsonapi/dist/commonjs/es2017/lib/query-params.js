'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.encodeQueryParams = encodeQueryParams;
exports.appendQueryParams = appendQueryParams;
function flattenObjectToParams(obj, path = []) {
    let params = [];
    Object.keys(obj).forEach(key => {
        if (!obj.hasOwnProperty(key)) {
            return;
        }
        let newPath = path.slice();
        newPath.push(key);
        if (obj[key] !== null && typeof obj[key] === 'object') {
            Array.prototype.push.apply(params, flattenObjectToParams(obj[key], newPath));
        } else {
            params.push({
                path: newPath,
                val: obj[key]
            });
        }
    });
    return params;
}
function encodeQueryParams(obj) {
    return flattenObjectToParams(obj).map(param => {
        if (param.path.length === 1) {
            param.path = param.path[0];
        } else {
            let firstSegment = param.path[0];
            let remainingSegments = param.path.slice(1);
            param.path = firstSegment + '[' + remainingSegments.join('][') + ']';
        }
        return param;
    }).map(param => encodeURIComponent(param.path) + '=' + encodeURIComponent(param.val)).join('&');
}
function appendQueryParams(url, obj) {
    let fullUrl = url;
    let queryParams = encodeQueryParams(obj);
    if (queryParams.length > 0) {
        if (fullUrl.indexOf('?') === -1) {
            fullUrl += '?';
        } else {
            fullUrl += '&';
        }
        fullUrl += queryParams;
    }
    return fullUrl;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9xdWVyeS1wYXJhbXMuanMiXSwibmFtZXMiOlsiZW5jb2RlUXVlcnlQYXJhbXMiLCJhcHBlbmRRdWVyeVBhcmFtcyIsImZsYXR0ZW5PYmplY3RUb1BhcmFtcyIsIm9iaiIsInBhdGgiLCJwYXJhbXMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImhhc093blByb3BlcnR5IiwibmV3UGF0aCIsInNsaWNlIiwicHVzaCIsIkFycmF5IiwicHJvdG90eXBlIiwiYXBwbHkiLCJ2YWwiLCJtYXAiLCJwYXJhbSIsImxlbmd0aCIsImZpcnN0U2VnbWVudCIsInJlbWFpbmluZ1NlZ21lbnRzIiwiam9pbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInVybCIsImZ1bGxVcmwiLCJxdWVyeVBhcmFtcyIsImluZGV4T2YiXSwibWFwcGluZ3MiOiI7Ozs7O1FBbUJnQkEsaUIsR0FBQUEsaUI7UUFZQUMsaUIsR0FBQUEsaUI7QUEvQmhCLFNBQVNDLHFCQUFULENBQStCQyxHQUEvQixFQUFvQ0MsT0FBTyxFQUEzQyxFQUErQztBQUMzQyxRQUFJQyxTQUFTLEVBQWI7QUFDQUMsV0FBT0MsSUFBUCxDQUFZSixHQUFaLEVBQWlCSyxPQUFqQixDQUF5QkMsT0FBTztBQUM1QixZQUFJLENBQUNOLElBQUlPLGNBQUosQ0FBbUJELEdBQW5CLENBQUwsRUFBOEI7QUFDMUI7QUFDSDtBQUNELFlBQUlFLFVBQVVQLEtBQUtRLEtBQUwsRUFBZDtBQUNBRCxnQkFBUUUsSUFBUixDQUFhSixHQUFiO0FBQ0EsWUFBSU4sSUFBSU0sR0FBSixNQUFhLElBQWIsSUFBcUIsT0FBT04sSUFBSU0sR0FBSixDQUFQLEtBQW9CLFFBQTdDLEVBQXVEO0FBQ25ESyxrQkFBTUMsU0FBTixDQUFnQkYsSUFBaEIsQ0FBcUJHLEtBQXJCLENBQTJCWCxNQUEzQixFQUFtQ0gsc0JBQXNCQyxJQUFJTSxHQUFKLENBQXRCLEVBQWdDRSxPQUFoQyxDQUFuQztBQUNILFNBRkQsTUFFTztBQUNITixtQkFBT1EsSUFBUCxDQUFZO0FBQ1JULHNCQUFNTyxPQURFO0FBRVJNLHFCQUFLZCxJQUFJTSxHQUFKO0FBRkcsYUFBWjtBQUlIO0FBQ0osS0FkRDtBQWVBLFdBQU9KLE1BQVA7QUFDSDtBQUNNLFNBQVNMLGlCQUFULENBQTJCRyxHQUEzQixFQUFnQztBQUNuQyxXQUFPRCxzQkFBc0JDLEdBQXRCLEVBQTJCZSxHQUEzQixDQUErQkMsU0FBUztBQUMzQyxZQUFJQSxNQUFNZixJQUFOLENBQVdnQixNQUFYLEtBQXNCLENBQTFCLEVBQTZCO0FBQ3pCRCxrQkFBTWYsSUFBTixHQUFhZSxNQUFNZixJQUFOLENBQVcsQ0FBWCxDQUFiO0FBQ0gsU0FGRCxNQUVPO0FBQ0gsZ0JBQUlpQixlQUFlRixNQUFNZixJQUFOLENBQVcsQ0FBWCxDQUFuQjtBQUNBLGdCQUFJa0Isb0JBQW9CSCxNQUFNZixJQUFOLENBQVdRLEtBQVgsQ0FBaUIsQ0FBakIsQ0FBeEI7QUFDQU8sa0JBQU1mLElBQU4sR0FBYWlCLGVBQWUsR0FBZixHQUFxQkMsa0JBQWtCQyxJQUFsQixDQUF1QixJQUF2QixDQUFyQixHQUFvRCxHQUFqRTtBQUNIO0FBQ0QsZUFBT0osS0FBUDtBQUNILEtBVE0sRUFTSkQsR0FUSSxDQVNBQyxTQUFTSyxtQkFBbUJMLE1BQU1mLElBQXpCLElBQWlDLEdBQWpDLEdBQXVDb0IsbUJBQW1CTCxNQUFNRixHQUF6QixDQVRoRCxFQVMrRU0sSUFUL0UsQ0FTb0YsR0FUcEYsQ0FBUDtBQVVIO0FBQ00sU0FBU3RCLGlCQUFULENBQTJCd0IsR0FBM0IsRUFBZ0N0QixHQUFoQyxFQUFxQztBQUN4QyxRQUFJdUIsVUFBVUQsR0FBZDtBQUNBLFFBQUlFLGNBQWMzQixrQkFBa0JHLEdBQWxCLENBQWxCO0FBQ0EsUUFBSXdCLFlBQVlQLE1BQVosR0FBcUIsQ0FBekIsRUFBNEI7QUFDeEIsWUFBSU0sUUFBUUUsT0FBUixDQUFnQixHQUFoQixNQUF5QixDQUFDLENBQTlCLEVBQWlDO0FBQzdCRix1QkFBVyxHQUFYO0FBQ0gsU0FGRCxNQUVPO0FBQ0hBLHVCQUFXLEdBQVg7QUFDSDtBQUNEQSxtQkFBV0MsV0FBWDtBQUNIO0FBQ0QsV0FBT0QsT0FBUDtBQUNIIiwiZmlsZSI6ImxpYi9xdWVyeS1wYXJhbXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBmbGF0dGVuT2JqZWN0VG9QYXJhbXMob2JqLCBwYXRoID0gW10pIHtcbiAgICBsZXQgcGFyYW1zID0gW107XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbmV3UGF0aCA9IHBhdGguc2xpY2UoKTtcbiAgICAgICAgbmV3UGF0aC5wdXNoKGtleSk7XG4gICAgICAgIGlmIChvYmpba2V5XSAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShwYXJhbXMsIGZsYXR0ZW5PYmplY3RUb1BhcmFtcyhvYmpba2V5XSwgbmV3UGF0aCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyYW1zLnB1c2goe1xuICAgICAgICAgICAgICAgIHBhdGg6IG5ld1BhdGgsXG4gICAgICAgICAgICAgICAgdmFsOiBvYmpba2V5XVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVF1ZXJ5UGFyYW1zKG9iaikge1xuICAgIHJldHVybiBmbGF0dGVuT2JqZWN0VG9QYXJhbXMob2JqKS5tYXAocGFyYW0gPT4ge1xuICAgICAgICBpZiAocGFyYW0ucGF0aC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHBhcmFtLnBhdGggPSBwYXJhbS5wYXRoWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGZpcnN0U2VnbWVudCA9IHBhcmFtLnBhdGhbMF07XG4gICAgICAgICAgICBsZXQgcmVtYWluaW5nU2VnbWVudHMgPSBwYXJhbS5wYXRoLnNsaWNlKDEpO1xuICAgICAgICAgICAgcGFyYW0ucGF0aCA9IGZpcnN0U2VnbWVudCArICdbJyArIHJlbWFpbmluZ1NlZ21lbnRzLmpvaW4oJ11bJykgKyAnXSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcmFtO1xuICAgIH0pLm1hcChwYXJhbSA9PiBlbmNvZGVVUklDb21wb25lbnQocGFyYW0ucGF0aCkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQocGFyYW0udmFsKSkuam9pbignJicpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZFF1ZXJ5UGFyYW1zKHVybCwgb2JqKSB7XG4gICAgbGV0IGZ1bGxVcmwgPSB1cmw7XG4gICAgbGV0IHF1ZXJ5UGFyYW1zID0gZW5jb2RlUXVlcnlQYXJhbXMob2JqKTtcbiAgICBpZiAocXVlcnlQYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAoZnVsbFVybC5pbmRleE9mKCc/JykgPT09IC0xKSB7XG4gICAgICAgICAgICBmdWxsVXJsICs9ICc/JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZ1bGxVcmwgKz0gJyYnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bGxVcmwgKz0gcXVlcnlQYXJhbXM7XG4gICAgfVxuICAgIHJldHVybiBmdWxsVXJsO1xufSJdfQ==