'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PullOperators = undefined;

var _utils = require('@orbit/utils');

var _data = require('@orbit/data');

var _getOperators = require('./get-operators');

function deserialize(source, document) {
    const deserialized = source.serializer.deserializeDocument(document);
    const records = (0, _utils.toArray)(deserialized.data);
    if (deserialized.included) {
        Array.prototype.push.apply(records, deserialized.included);
    }
    const operations = records.map(record => {
        return {
            op: 'replaceRecord',
            record
        };
    });
    return [(0, _data.buildTransform)(operations)];
}
const PullOperators = exports.PullOperators = {
    findRecord(source, query) {
        return _getOperators.GetOperators.findRecord(source, query).then(data => deserialize(source, data));
    },
    findRecords(source, query) {
        return _getOperators.GetOperators.findRecords(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecord(source, query) {
        return _getOperators.GetOperators.findRelatedRecord(source, query).then(data => deserialize(source, data));
    },
    findRelatedRecords(source, query) {
        return _getOperators.GetOperators.findRelatedRecords(source, query).then(data => deserialize(source, data));
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wdWxsLW9wZXJhdG9ycy5qcyJdLCJuYW1lcyI6WyJkZXNlcmlhbGl6ZSIsInNvdXJjZSIsImRvY3VtZW50IiwiZGVzZXJpYWxpemVkIiwic2VyaWFsaXplciIsImRlc2VyaWFsaXplRG9jdW1lbnQiLCJyZWNvcmRzIiwiZGF0YSIsImluY2x1ZGVkIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJwdXNoIiwiYXBwbHkiLCJvcGVyYXRpb25zIiwibWFwIiwicmVjb3JkIiwib3AiLCJQdWxsT3BlcmF0b3JzIiwiZmluZFJlY29yZCIsInF1ZXJ5IiwiR2V0T3BlcmF0b3JzIiwidGhlbiIsImZpbmRSZWNvcmRzIiwiZmluZFJlbGF0ZWRSZWNvcmQiLCJmaW5kUmVsYXRlZFJlY29yZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQSxTQUFTQSxXQUFULENBQXFCQyxNQUFyQixFQUE2QkMsUUFBN0IsRUFBdUM7QUFDbkMsVUFBTUMsZUFBZUYsT0FBT0csVUFBUCxDQUFrQkMsbUJBQWxCLENBQXNDSCxRQUF0QyxDQUFyQjtBQUNBLFVBQU1JLFVBQVUsb0JBQVFILGFBQWFJLElBQXJCLENBQWhCO0FBQ0EsUUFBSUosYUFBYUssUUFBakIsRUFBMkI7QUFDdkJDLGNBQU1DLFNBQU4sQ0FBZ0JDLElBQWhCLENBQXFCQyxLQUFyQixDQUEyQk4sT0FBM0IsRUFBb0NILGFBQWFLLFFBQWpEO0FBQ0g7QUFDRCxVQUFNSyxhQUFhUCxRQUFRUSxHQUFSLENBQVlDLFVBQVU7QUFDckMsZUFBTztBQUNIQyxnQkFBSSxlQUREO0FBRUhEO0FBRkcsU0FBUDtBQUlILEtBTGtCLENBQW5CO0FBTUEsV0FBTyxDQUFDLDBCQUFlRixVQUFmLENBQUQsQ0FBUDtBQUNIO0FBQ00sTUFBTUksd0NBQWdCO0FBQ3pCQyxlQUFXakIsTUFBWCxFQUFtQmtCLEtBQW5CLEVBQTBCO0FBQ3RCLGVBQU9DLDJCQUFhRixVQUFiLENBQXdCakIsTUFBeEIsRUFBZ0NrQixLQUFoQyxFQUF1Q0UsSUFBdkMsQ0FBNENkLFFBQVFQLFlBQVlDLE1BQVosRUFBb0JNLElBQXBCLENBQXBELENBQVA7QUFDSCxLQUh3QjtBQUl6QmUsZ0JBQVlyQixNQUFaLEVBQW9Ca0IsS0FBcEIsRUFBMkI7QUFDdkIsZUFBT0MsMkJBQWFFLFdBQWIsQ0FBeUJyQixNQUF6QixFQUFpQ2tCLEtBQWpDLEVBQXdDRSxJQUF4QyxDQUE2Q2QsUUFBUVAsWUFBWUMsTUFBWixFQUFvQk0sSUFBcEIsQ0FBckQsQ0FBUDtBQUNILEtBTndCO0FBT3pCZ0Isc0JBQWtCdEIsTUFBbEIsRUFBMEJrQixLQUExQixFQUFpQztBQUM3QixlQUFPQywyQkFBYUcsaUJBQWIsQ0FBK0J0QixNQUEvQixFQUF1Q2tCLEtBQXZDLEVBQThDRSxJQUE5QyxDQUFtRGQsUUFBUVAsWUFBWUMsTUFBWixFQUFvQk0sSUFBcEIsQ0FBM0QsQ0FBUDtBQUNILEtBVHdCO0FBVXpCaUIsdUJBQW1CdkIsTUFBbkIsRUFBMkJrQixLQUEzQixFQUFrQztBQUM5QixlQUFPQywyQkFBYUksa0JBQWIsQ0FBZ0N2QixNQUFoQyxFQUF3Q2tCLEtBQXhDLEVBQStDRSxJQUEvQyxDQUFvRGQsUUFBUVAsWUFBWUMsTUFBWixFQUFvQk0sSUFBcEIsQ0FBNUQsQ0FBUDtBQUNIO0FBWndCLENBQXRCIiwiZmlsZSI6ImxpYi9wdWxsLW9wZXJhdG9ycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRvQXJyYXkgfSBmcm9tICdAb3JiaXQvdXRpbHMnO1xuaW1wb3J0IHsgYnVpbGRUcmFuc2Zvcm0gfSBmcm9tICdAb3JiaXQvZGF0YSc7XG5pbXBvcnQgeyBHZXRPcGVyYXRvcnMgfSBmcm9tIFwiLi9nZXQtb3BlcmF0b3JzXCI7XG5mdW5jdGlvbiBkZXNlcmlhbGl6ZShzb3VyY2UsIGRvY3VtZW50KSB7XG4gICAgY29uc3QgZGVzZXJpYWxpemVkID0gc291cmNlLnNlcmlhbGl6ZXIuZGVzZXJpYWxpemVEb2N1bWVudChkb2N1bWVudCk7XG4gICAgY29uc3QgcmVjb3JkcyA9IHRvQXJyYXkoZGVzZXJpYWxpemVkLmRhdGEpO1xuICAgIGlmIChkZXNlcmlhbGl6ZWQuaW5jbHVkZWQpIHtcbiAgICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkocmVjb3JkcywgZGVzZXJpYWxpemVkLmluY2x1ZGVkKTtcbiAgICB9XG4gICAgY29uc3Qgb3BlcmF0aW9ucyA9IHJlY29yZHMubWFwKHJlY29yZCA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvcDogJ3JlcGxhY2VSZWNvcmQnLFxuICAgICAgICAgICAgcmVjb3JkXG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIFtidWlsZFRyYW5zZm9ybShvcGVyYXRpb25zKV07XG59XG5leHBvcnQgY29uc3QgUHVsbE9wZXJhdG9ycyA9IHtcbiAgICBmaW5kUmVjb3JkKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVjb3JkKHNvdXJjZSwgcXVlcnkpLnRoZW4oZGF0YSA9PiBkZXNlcmlhbGl6ZShzb3VyY2UsIGRhdGEpKTtcbiAgICB9LFxuICAgIGZpbmRSZWNvcmRzKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVjb3Jkcyhzb3VyY2UsIHF1ZXJ5KS50aGVuKGRhdGEgPT4gZGVzZXJpYWxpemUoc291cmNlLCBkYXRhKSk7XG4gICAgfSxcbiAgICBmaW5kUmVsYXRlZFJlY29yZChzb3VyY2UsIHF1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBHZXRPcGVyYXRvcnMuZmluZFJlbGF0ZWRSZWNvcmQoc291cmNlLCBxdWVyeSkudGhlbihkYXRhID0+IGRlc2VyaWFsaXplKHNvdXJjZSwgZGF0YSkpO1xuICAgIH0sXG4gICAgZmluZFJlbGF0ZWRSZWNvcmRzKHNvdXJjZSwgcXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIEdldE9wZXJhdG9ycy5maW5kUmVsYXRlZFJlY29yZHMoc291cmNlLCBxdWVyeSkudGhlbihkYXRhID0+IGRlc2VyaWFsaXplKHNvdXJjZSwgZGF0YSkpO1xuICAgIH1cbn07Il19